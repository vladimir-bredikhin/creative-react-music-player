{"version":3,"sources":["components/LibrarySong.js","components/Library.js","components/Nav.js","components/Player.js","components/Song.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["LibrarySong","song","setCurrentSong","cover","name","artist","className","active","onClick","src","alt","Library","songs","openLibrary","map","key","id","Nav","setOpenLibrary","prev","icon","faMusic","Player","currentSong","isPlaying","setIsPlaying","audioRef","skipTrackHandler","useState","currentTime","duration","currentTimePct","songInfo","setSongInfo","useEffect","title","current","play","pause","document","timeUpdateHandler","target","Math","round","getTime","time","floor","slice","color","fromColor","toColor","style","background","type","min","max","value","onChange","transform","faAngleLeft","size","faPause","faPlay","faAngleRight","ref","audio","onLoadedMetadata","onTimeUpdate","onEnded","Song","chillhop","uuidv4","App","setSongs","useRef","s","step","currentSongIdx","findIndex","newSongIdx","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5a21f465.chunk.js","sourcesContent":["const LibrarySong = ({ song, setCurrentSong }) => {\n  const { cover, name, artist } = song;\n\n  return (\n    <div\n      className={`song${song.active ? ' active' : ''}`}\n      onClick={() => setCurrentSong(() => song)}\n    >\n      <img src={cover} alt={name} />\n      <div className='description'>\n        <h3>{name}</h3>\n        <h4>{artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import LibrarySong from './LibrarySong';\n\nconst Library = ({ songs, setCurrentSong, openLibrary }) => {\n  return (\n    <div className={`library${openLibrary ? ' open' : ''}`}>\n      <h2>Library</h2>\n      <div className='songs'>\n        {songs.map((song) => (\n          <LibrarySong {...{ song, setCurrentSong }} key={song.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import { faMusic } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Nav = ({ setOpenLibrary }) => {\n  return (\n    <nav>\n      <h1>Waves</h1>\n      <button onClick={() => setOpenLibrary((prev) => !prev)}>\n        Library\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import {\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n  faPlay,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useState } from 'react';\n\nconst INITIAL_TITLE = 'Creative React Music Player';\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  skipTrackHandler,\n}) => {\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    currentTimePct: 0,\n  });\n\n  useEffect(() => {\n    let title;\n    if (isPlaying) {\n      audioRef.current.play();\n      title = `${currentSong.name} by ${currentSong.artist}`;\n    } else {\n      audioRef.current.pause();\n      title = INITIAL_TITLE;\n    }\n\n    document.title = title;\n  }, [currentSong, isPlaying, audioRef]);\n\n  const timeUpdateHandler = ({ target }) => {\n    const { currentTime, duration } = target;\n    setSongInfo({\n      ...songInfo,\n      currentTime,\n      duration,\n      currentTimePct: Math.round((100 * currentTime) / duration) || 0,\n    });\n  };\n\n  const getTime = (time) =>\n    time\n      ? Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n      : '0:00';\n\n  const dragHandler = ({ target: { value: currentTime } }) => {\n    setSongInfo(() => ({ ...songInfo, currentTime }));\n    audioRef.current.currentTime = currentTime;\n  };\n\n  const { currentTime, duration, currentTimePct } = songInfo;\n  const [fromColor, toColor] = currentSong?.color;\n  return (\n    <>\n      <div className='player'>\n        <div className='time-control'>\n          <p>{getTime(currentTime)}</p>\n          <div\n            className='track'\n            style={{\n              background: `linear-gradient(to right, ${fromColor}, ${toColor})`,\n            }}\n          >\n            <input\n              type='range'\n              min={0}\n              max={duration || 0}\n              value={currentTime}\n              onChange={dragHandler}\n            />\n            <div\n              className='animate'\n              style={{ transform: `translateX(${currentTimePct}%)` }}\n            >\n              {' '}\n            </div>\n          </div>\n          <p>{getTime(songInfo.duration)}</p>\n        </div>\n        <div className='play-control'>\n          <FontAwesomeIcon\n            onClick={() => skipTrackHandler(-1)}\n            className='skip-back'\n            icon={faAngleLeft}\n            size='2x'\n          />\n          <FontAwesomeIcon\n            onClick={() => setIsPlaying((prev) => !prev)}\n            className='play'\n            icon={isPlaying ? faPause : faPlay}\n            size='2x'\n          />\n          <FontAwesomeIcon\n            onClick={() => skipTrackHandler(1)}\n            className='skip-forward'\n            icon={faAngleRight}\n            size='2x'\n          />\n        </div>\n        <audio\n          ref={audioRef}\n          src={currentSong.audio}\n          onLoadedMetadata={timeUpdateHandler}\n          onTimeUpdate={timeUpdateHandler}\n          onEnded={() => skipTrackHandler(1)}\n        ></audio>\n      </div>\n    </>\n  );\n};\n\nexport default Player;\n","const Song = ({ currentSong: { cover, name, artist } }) => {\n  return (\n    <div className='song-container'>\n      <img src={cover} alt={name} />\n      <h2>{name}</h2>\n      <h3>{artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import { v4 as uuidv4 } from 'uuid';\n\nconst chillhop = () => {\n  return [\n    {\n      name: 'Beaver Creek',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg',\n      artist: 'Aso, Middle School, Aviino',\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=10075',\n      color: ['#205950', '#2ab3bf'],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: 'Daylight',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg',\n      artist: 'Aiguille',\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=9272',\n      color: ['#EF8EA9', '#ab417f'],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: 'Keep Going',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg',\n      artist: 'Swørn',\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=9222',\n      color: ['#CD607D', '#c94043'],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: 'Nightfall',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg',\n      artist: 'Aiguille',\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=9148',\n      color: ['#EF8EA9', '#ab417f'],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: 'Reflection',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg',\n      artist: 'Swørn',\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=9228',\n      color: ['#CD607D', '#c94043'],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: 'Under the City Stars',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg',\n      artist: 'Aso, Middle School, Aviino',\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=10074',\n      color: ['#205950', '#2ab3bf'],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n};\n\nexport default chillhop;\n","import { useEffect, useRef, useState } from 'react';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport chillhop from './data';\n\nconst App = () => {\n  const [songs, setSongs] = useState(chillhop());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [openLibrary, setOpenLibrary] = useState(false);\n\n  const audioRef = useRef(null);\n\n  useEffect(() => {\n    currentSong.active = true;\n    setSongs((prev) => prev.map((s) => ({ ...s, active: s === currentSong })));\n  }, [currentSong]);\n\n  const skipTrackHandler = (step) => {\n    const currentSongIdx = songs.findIndex((s) => s.id === currentSong.id);\n    const newSongIdx = (songs.length + currentSongIdx + step) % songs.length;\n    setCurrentSong(() => songs[newSongIdx]);\n  };\n\n  return (\n    <div className={`App${openLibrary ? ' library-active' : ''}`}>\n      <Nav {...{ setOpenLibrary }} />\n      <Song {...{ currentSong }} />\n      <Player\n        {...{\n          currentSong,\n          isPlaying,\n          setIsPlaying,\n          audioRef,\n          skipTrackHandler,\n        }}\n      />\n      <Library {...{ songs, setCurrentSong, openLibrary }} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}